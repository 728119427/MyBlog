<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seven.myblog.mapper.BlogExtMapper">

  <resultMap id="BaseResultMap" type="com.seven.myblog.model.Blog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="appreciation" jdbcType="BIT" property="appreciation" />
    <result column="commentabled" jdbcType="BIT" property="commentabled" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="first_picture" jdbcType="VARCHAR" property="firstPicture" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="published" jdbcType="BIT" property="published" />
    <result column="recommend" jdbcType="BIT" property="recommend" />
    <result column="share_statement" jdbcType="BIT" property="shareStatement" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <association property="type" column="type_id" resultMap="typeResultMap"></association>
    <collection property="tags" resultMap="TagResultMap"></collection>
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.seven.myblog.model.Blog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <resultMap id="typeResultMap" type="com.seven.myblog.model.Type">
    <id column="ty_id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>

  <resultMap id="TagResultMap" type="com.seven.myblog.model.Tag">
    <id column="tg_id" jdbcType="BIGINT" property="id" />
    <result column="tag_name" jdbcType="VARCHAR" property="name" />
  </resultMap>

  <!--查询blogs页面显示的blog-->
  <select id="listUnion" resultMap="BaseResultMap">
    SELECT b.*,t.name FROM `blog` b LEFT OUTER JOIN `type` t ON b.type_id=t.id
  </select>

  <!--根据搜索条件拆查询关联的blog-->
  <select id="listUnion_search" parameterType="com.seven.myblog.dto.BlogDTO" resultMap="BaseResultMap">
     SELECT b.*,t.name FROM `blog` b LEFT OUTER JOIN `type` t ON b.type_id=t.id
     <where>
       <if test="title!=null and title !=''">
         AND title like  #{title}
       </if>
       <if test="typeId!=null">
         AND `type_id`=#{typeId}
       </if>
       <if test="recommend == true">
         AND recommend=#{recommend}
       </if>
     </where>
  </select>


<!--根据blogId查询关联的blog内容回显到编辑页面-->
  <select id="getUnionBlogById" resultMap="ResultMapWithBLOBs" resultType="int">
    SELECT b.*,ty.name,ty.id ty_id,tg.name tag_name,tg.id tg_id
    FROM blog b
    LEFT OUTER JOIN `type` ty ON b.type_id=ty.id
    LEFT OUTER JOIN blog_tag bt ON b.id=bt.blog_id
    LEFT OUTER JOIN tag tg ON bt.tag_id=tg.id
    WHERE b.id=#{id}

  </select>

  <!--插入blog——tag-->
  <insert id="insertBlogTag" parameterType="com.seven.myblog.dto.BlogDTO">
    INSERT INTO blog_tag (blog_id,tag_id) VALUES (#{blogId},#{tagId})
  </insert>


<!--根据blog_id查询blog_tag原来的tagIds-->
  <select id="get_bt_tgId" parameterType="long" resultType="long">
    SELECT tag_id FROM blog_tag WHERE blog_id=#{blogId}
  </select>

  <!--根据blogId删除全部对应的tagId-->
  <delete id="deleteBlogTag" parameterType="long" >
    DELETE FROM blog_tag WHERE blog_id =#{blog_id}
  </delete>

  <!--根据blogDTO删除部分tagId-->
  <delete id="delete_some_BlogTag" parameterType="com.seven.myblog.dto.BlogDTO">
    DELETE FROM blog_tag WHERE blog_id=#{blogId} AND tag_id=#{tagId}
  </delete>
</mapper>